---
swagger: "2.0"
info:
  description: ""
  version: "0.1.0"
  title: "Identifying DB API"
host: "localhost:8080"
basePath: "/v0.1"
tags:
- name: "Identifying DB API"
  description: ""
schemes:
- "https"
paths:
  /university/create_collection:
    post:
      tags:
        - "university"
      summary: "create a new university collection"
      description: ""
      operationId: "create_university_collection"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "University object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/University"
      responses:
        200:
          description: OK
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/create:
    post:
      tags:
        - "student"
      summary: "create a new student entry"
      description: ""
      operationId: "create_new_student_entry"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "University name and student entry that needs to be added to the university collection"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        200:
          description: OK
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/create_many:
    post:
      tags:
        - "student"
      summary: "bulk create new student entries"
      description: ""
      operationId: "bulk_create_student_entries"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "University name and student entries that needs to be added to the university collection"
        required: true
        schema:
          $ref: "#/definitions/Students"
      responses:
        200:
          description: OK
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/update_id:
    post:
      tags:
        - "student"
      summary: "update a student's id"
      description: ""
      operationId: "update_id"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "University name and old id"
        required: true
        schema:
          $ref: "#/definitions/UpdateId"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/update_address:
    post:
      tags:
        - "student"
      summary: "update a student's address"
      description: ""
      operationId: "update_address"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "University name, id, and new address"
        required: true
        schema:
          $ref: "#/definitions/UpdateAddress"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/all:
    get:
      tags:
      - "student"
      summary: "retrieve all students belonging to one university"
      description: ""
      operationId: "get_all_students"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_db_id:
    get:
      tags:
      - "student"
      summary: "retrieve one student by his/her database id"
      description: ""
      operationId: "get_student_by_db_id"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "db_id"
        type: "string"
        required: true
        description: "student's database id"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/bulk_by_db_id:
    get:
      tags:
      - "student"
      summary: "retrieve students by their database id"
      description: ""
      operationId: "bulk_get_students_by_id"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "db_ids"
        type: "array"
        items: 
          type: "string"
        required: true
        description: "students' database id"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_first_name:
    get:
      tags:
      - "student"
      summary: "retrieve all students with a particular first name"
      description: ""
      operationId: "get_students_by_first_name"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "first_name"
        type: "string"
        required: true
        description: "student's first name"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_last_name:
    get:
      tags:
      - "student"
      summary: "retrieve all students with a particular last name"
      description: ""
      operationId: "get_students_by_last_name"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "last_name"
        type: "string"
        required: true
        description: "student's last name"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_gender:
    get:
      tags:
      - "student"
      summary: "retrieve all students with a particular gender"
      description: ""
      operationId: "get_students_by_gender"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "gender"
        type: "string"
        required: true
        description: "student's gender"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_race:
    get:
      tags:
      - "student"
      summary: "retrieve all students with a particular race"
      description: ""
      operationId: "get_students_by_race"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "race"
        type: "string"
        required: true
        description: "student's race"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_student_id:
    get:
      tags:
      - "student"
      summary: "retrieve one student by his/her student id"
      description: ""
      operationId: "get_students_by_student_id"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "student_id"
        type: "string"
        required: true
        description: "student's id"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_address:
    get:
      tags:
      - "student"
      summary: "retrieve students by address characteristica. Can by street or city."
      description: ""
      operationId: "get_students_by_address"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "address"
        type: "string"
        required: true
        description: "student's address part"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_birth_year:
    get:
      tags:
      - "student"
      summary: "retrieve students by their birth year"
      description: ""
      operationId: "get_students_by_birth_year"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "birth_year"
        type: "string"
        required: true
        description: "student's birth year"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
  /student/by_birth_month:
    get:
      tags:
      - "student"
      summary: "retrieve students by their birth month"
      description: ""
      operationId: "get_students_by_birth_month"
      parameters:
      - in: "query"
        name: "university_name"
        description: "name of the university"
        required: true
        type: "string"
      - in: "query"
        name: "birth_month"
        type: "string"
        required: true
        description: "student's birth month"
      produces:
      - "application/json"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "swagger_server.controllers.identifying_db_API_functions"
definitions:
  University:
    type: "object"
    properties:
      university_name:
        type: "string"
    xml:
      name: "University"
  Student:
    type: "object"
    properties:
      university_name:
        type: "string"
      student_data:
        type: "object"
        properties:
          first_name:
            type: "string"
          last_name:
            type: "string"
          date_of_birth:
            type: "string"
          gender:
            type: "string"
          race:
            type: "string"
          address:
            type: "string"
          student_id:
            type: "string"
    xml:
      name: "Student"
  Students:
    type: "object"
    properties:
      university_name:
        type: "string"
      students_data:
        type: "array"
        items:
          type: "object"
          properties:
            first_name:
              type: "string"
            last_name:
              type: "string"
            date_of_birth:
              type: "string"
            gender:
              type: "string"
            race:
              type: "string"
            address:
              type: "string"
            student_id:
              type: "string"
    xml:
      name: "Students"
  UpdateId:
    type: "object"
    properties:
      university_name:
        type: "string"
      id:
        type: "string"
    xml:
      name: "UpdateId"
  UpdateAddress:
    type: "object"
    properties:
      university_name:
        type: "string"
      id:
        type: "string"
      address:
        type: "string"
    xml:
      name: "UpdateAddress"